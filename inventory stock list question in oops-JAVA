// 1. Item Class:
// Attributes: item_id, name, description, quantity_in_stock, unit_price, category, etc.
// Methods: get_item_info(), update_quantity(), calculate_total_value(), etc.
// 2. Category Class:
// Attributes: category_id, name, description, etc.
// Methods: get_category_info(), add_item_to_category(), remove_item_from_category(), etc.
// 3. Storage Location Class:
// Attributes: location_id, name, capacity, items_stored, etc.
// Methods: get_location_info(), add_item_to_location(), remove_item_from_location(), etc.
// 4. Inventory Management Class:
// Attributes: inventory_list (a list of Item objects), category_list (a list of Category objects), location_list (a list of StorageLocation objects).
// Methods: add_item(), remove_item(), search_item(), update_item(), display_inventory() etc. 

import java.util.*;
class category{
    int category_id;
    String name;
    String description;
    category(int category_id,String name,String description){
        this.category_id = category_id;
        this.name = name;
        this.description = description;
    }
    public String toString(){
        return String .format("%10d %10s %15s",category_id,name,description);
    }
    
}
class item {
    int item_id;
    String name;
    String description;
    int quantity;
    int unit_price;
    String Category;
    int total ;
    
    item(int item_id,String name,String description,int quantity,int unit_price,String Category,int total){
        this.item_id = item_id;
        this.name = name;
        this.description = description;
        this.quantity = quantity;
        this.unit_price = unit_price;
        this.Category = Category;
        this.total = total;
    }
    public String toString(){
        return String.format("%10d %15s %15s %10d %10d %15s %5d",item_id,name,description,quantity,unit_price,Category,total);
    } 
}

class iteminfo{
    // Methods: get_item_info(), update_quantity(), calculate_total_value(), etc.
    ArrayList<item> items = new ArrayList<>();
    public void get_item_info(int itemid){
        System.out.printf("%10s %15s %10s %10s %10s %15s %5s","item_id", "name", "description", "quantity_in_stock", "unit_price", "category","total");
        System.out.println();
        for(item i : items){
            if(i.item_id == itemid){
            System.out.println(i);
            System.out.println("Sussefully displyed");
            break;
            }
        }
    }
    public void add_item(item i){
        items.add(i);
        System.out.println("item add succesfully");
        
    }
    
    public void  update_quantity(int itemid,int updatequty){
        for(item i : items){
            if(i.item_id == itemid){
                i.quantity+= updatequty; 
            System.out.println("Sussefully Updated");
            break;
            }
        }
    }
    public void display_item(){
        
        for(item i: items ){
            System.out.println(i.item_id+" "+i.name);
        }
    }
    public void display_fullitem(){
                System.out.printf("%10s %15s %10s %s10 %10s %15s %5s","item_id", "name", "description", "quantity_in_stock", "unit_price", "category","total");
        System.out.println();
        for(item i: items ){
            System.out.println(i);
        }
    }
    
    public int calculate_total_value(){
        int total = 0;
        for(item i : items){
            total += i.unit_price;
        }
        return total;
    }
    
    public int itemsize(){
        return items.size();
    }
    public void remove_item(int itemno){
        for(item c : items){
            if(c.item_id == itemno){
                items.remove(itemno-1);
                System.out.println("Succesfully removed");
            }
        }
    }
}
// Methods: get_category_info(), add_item_to_category(), remove_item_from_category(), etc.

class category_list{
    ArrayList<category> categorys = new ArrayList<>();
    category_list(){
        // Attributes: category_id, name, description, etc.
        categorys.add(new category(1,"wood","quality product"));
        categorys.add(new category(2,"TV","quality product"));
        categorys.add(new category(3,"watch","quality product"));
        categorys.add(new category(4,"fan","quality product"));
    }
    
    public category get_category_info(int itemno){
        category  i = null;
        for(category c: categorys){
            if(c.category_id == itemno){
             i = c;
            }
        }
        return i;
    }
    public void add_item_to_category(category c){
        categorys.add(c);
        System.out.println("Added succesfully");
    }
    public void remove_item(int itemno){
        for(category c : categorys){
            if(c.category_id == itemno){
                categorys.remove(itemno-1);
                System.out.println("Succesfully removed");
            }
        }
    }
    public void category_display(){
        System.out.printf("%10s %10s %15s","category_id","name","description");
        System.out.println();
        for(category i :  categorys){
            System.out.println(i);
        }
    }
}
public class Main
{
    static Scanner sc = new Scanner(System.in);
    static int itemid = 1; 
    static category_list categoryuse = new category_list();
    static iteminfo info = new iteminfo();
	public static void main(String[] args) {

	    while(true){
	        System.out.println("Enter your choice:");
	        System.out.println("1-add_item:");
	        System.out.println("2-remove_item:");
	        System.out.println("3-search_item:");
	        System.out.println("4-update_item:");
	        System.out.println("5-display_inventory:");
	        int choice = sc.nextInt();
	        // Methods: add_item(), remove_item(), search_item(), update_item(), display_inventory() etc. 
	        switch(choice){
	            case 1:
	                add_item();
	                break;
	            case 2:
	                remove();
	                break;
	           case 3:
	               info.display_item();
	               System.out.println("Enter the item number for details:");
	               int id = sc.nextInt();
	               info.get_item_info(id);
	               break;
	           case 4:
	               info.display_item();
	               System.out.println("Enter the item number for details:");
	               int id1 = sc.nextInt();
	               System.out.println("Enter the item qty:");
	               int qty = sc.nextInt();
	               info.update_quantity(id1,qty);
	               break;
	           case 5:
	               info.display_fullitem();
	               break;
	           case 6:
	               return ;
	               
	        }
	    }
	    
	    
	}
	   // item(int item_id,String name,String description,int quantity,int unit_price,String Category,int total){
	public static void remove(){
	    info.display_item();
	    System.out.println("Enter your id:");
	    int id = sc.nextInt();
	    info.remove_item(id);
	    
	}

	public static void add_item(){
    int item_id = itemid;
	System.out.println("Enter the name:");
    String name = sc.next();
    System.out.println("Enetr your Category id number:");
    categoryuse.category_display();
    int choice = sc.nextInt();
    category c = categoryuse.get_category_info(choice);
    String Category = c.name;
    String description = c.description;
    System.out.println("Enter your quantity:");
    int quantity = sc.nextInt();
    System.out.println("Enter unit price:");
    int unit_price = sc.nextInt();
    int total = unit_price*quantity;
    info.add_item(new item(item_id,name,description,quantity,unit_price,Category,total));
    itemid++;
	}
}
